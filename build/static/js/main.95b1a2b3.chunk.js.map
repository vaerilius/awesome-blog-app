{"version":3,"sources":["services/blogs.service.js","reducers/blogs.reducer.js","hooks/index.js","components/blogs/newBlogForm.js","components/blogs/blogs.js","App.js","store/store.js","index.js"],"names":["getAll","a","axios","get","blogs","data","addBlog","blog","post","headers","Authorization","createdBlog","reducer","state","action","type","useField","useState","value","setValue","onChange","event","target","connect","onAddBlog","dispatch","blogService","props","title","resetTitle","url","resetUrl","description","resetDescription","className","onSubmit","e","preventDefault","console","log","newBlog","author","Header","size","icon","textAlign","Content","Icon","name","circular","Table","striped","celled","Row","HeaderCell","Body","map","key","id","Cell","Image","src","likes","initializeBlogs","useEffect","Container","combineReducers","blogsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95b1a2b3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFhYSIsImlkIjoiNWQ4YzYxYzZkODE4NGYyZDY0NjRjY2NjIiwiaWF0IjoxNTY5NDgxMTg3fQ.KOs-1vucwpQou25B5hQZY1CSxo76X1dV3jxvfEY1QxM'\nconst getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst getAll = async () => {\n  const blogs = await axios.get(baseUrl)\n  return blogs.data\n}\n\nconst addBlog = async (blog) => {\n  const createdBlog = await axios.post(baseUrl, blog, getConfig() )\n  return createdBlog.data\n}\n\nexport default {\n  getAll,\n  addBlog\n}","import blogService from '../services/blogs.service'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return [...action.blogs]\n    case 'ADD_BLOG':\n      return [...state, action.blog]\n    default:\n      return state\n  }\n}\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      blogs\n    })\n  }\n}\nexport const onAddBlog = (data) => {\n  return async dispatch => {\n  \n    const blog = await blogService.addBlog(data)\n\n    dispatch({\n      type: 'ADD_BLOG',\n      blog\n    })\n\n\n\n  \n \n    \n  }\n}\n      export default reducer","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return [{\n    type,\n    value,\n    onChange,\n  }, reset]\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { onAddBlog } from \"../../reducers/blogs.reducer\"\n\nimport { useField } from '../../hooks/index'\n\nconst NewBlog= (props) => {\n  const [title, resetTitle] = useField('text')\n  const [url, resetUrl] = useField('text')\n  const [description, resetDescription] = useField('text')\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(title.value)\n\n    const newBlog = {\n      title: title.value,\n      url: url.value,\n      author: 'timo testaaja',\n      description: description.value\n    }\n\n    props.onAddBlog(newBlog)\n\n    resetTitle()\n    resetUrl()\n    resetDescription()\n\n  }\n\n  return (\n<form className=\"ui form\" onSubmit={handleSubmit}>\n  <div className=\"field\">\n    <label>title</label>\n    <input  {...title}  />\n  </div>\n  <div className=\"field\">\n    <label>url</label>\n    <input  {...url} />\n  </div>\n  <div className=\"field\">\n    <label>Description</label>\n    <input  {...description} />\n  </div>\n  <button className=\"ui button\" type=\"submit\">Submit</button>\n</form>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs\n  }\n}\nexport default connect(\n  mapStateToProps,\n  {\n    onAddBlog\n  }\n  )(NewBlog)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport NewBlogForm from './newBlogForm'\nimport { Table, Image, Header, Icon } from 'semantic-ui-react'\n\nconst Blogs = (props) => {\n\n  return (\n    <div>\n          <Header  size='huge' icon textAlign='center'>\n      \n      <Header.Content><Icon name='images' circular />Blogs</Header.Content>\n      <NewBlogForm />\n    </Header>\n    \n    <Table striped celled>\n    <Table.Header >\n\n      <Table.Row>\n        <Table.HeaderCell>Title</Table.HeaderCell>\n        <Table.HeaderCell>Image</Table.HeaderCell>\n        <Table.HeaderCell>Likes</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n      <Table.Body>\n        {props.blogs.map(blog =>\n          <Table.Row key={blog.id}>\n            <Table.Cell>\n                {blog.title}\n            </Table.Cell>\n            <Table.Cell>\n            <Image src={blog.url} size='tiny' circular />\n            </Table.Cell>\n            <Table.Cell>\n                {blog.likes}\n            </Table.Cell>\n          </Table.Row>\n        )}\n      </Table.Body>\n    </Table>\n  </div>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs\n  }\n}\n\nexport default connect(mapStateToProps)(Blogs)\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { initializeBlogs } from \"./reducers/blogs.reducer\"\nimport { Container } from 'semantic-ui-react'\nimport Blogs from './components/blogs/blogs';\n\nfunction App(props) {\n  useEffect(() => {\n    props.initializeBlogs()\n\n  }, [])\n  return (\n    <Container>\n      <Blogs />\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    blogs: state.blogs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initializeBlogs\n  })(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogsReducer from '../reducers/blogs.reducer'\n\nconst reducer = combineReducers({\n  blogs: blogsReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n"],"sourceRoot":""}